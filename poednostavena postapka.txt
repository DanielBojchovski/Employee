1. ASP.NET Core Web App

2. Project name - EmployeeRazor

3. Solution name - Employee

4. Manage nuget packages - install - Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation

5. Vo Program.cs - kodot - builder.Services.AddRazorPages(); - izmeni go vo - builder.Services.AddRazorPages().AddRazorRuntimeCompilation();

6. Create folder - Model

7. In Model folder create class - Employee

=========================================================

using System.ComponentModel.DataAnnotations;

namespace EmployeeRazor.Model
{
    public class Employee
    {
        [Key]
        [Range(1, int.MaxValue)]
        public int EmployeeId { get; set; }

        [Required(ErrorMessage = "First Name is required./ Името е задолжително")]
        [StringLength(50, MinimumLength = 2, ErrorMessage = "FirstName must be between 2 and 50 characters./ Името треба да биде помеѓу 2 и 50 букви.")]
        [Display(Name = "First Name")]
        public string FirstName { get; set; }

        [Required(ErrorMessage = "Last Name is required./ Презимето е задолжително")]
        [StringLength(50, MinimumLength = 2, ErrorMessage = "LastName must be between 2 and 50 characters./ Презимето треба да биде помеѓу 2 и 50 букви.")]
        [Display(Name = "Last Name")]
        public string LastName { get; set; }

        [Required(ErrorMessage = "Employee's salary is required./ Платата на вработениот е задолжителна")]
        [Range(18000, double.MaxValue, ErrorMessage = "Salary must be atleast 18000 denars./ Платата мора да биде во минимум 18000 денари.")]
        public double Salary { get; set; }

        [Required(ErrorMessage = "Employee's email address is required./ Email адресата на вработениот е задолжителна")]
        [StringLength(50, ErrorMessage = "Email's length cannot exceed 50 characters./ Email адресата не смее да надмине 50 знаци")]
        [EmailAddress]
        public string Email { get; set; }
    }
}


=========================================================

8. Open SQL Server Management Studio

9. Server name - (LocalDB)\MSSQLLocalDB - Connect

10. Vo appsettings.json dodaj connection string i celiot kod da izgleda vaka

==========================================================================

{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ConnectionStrings": {
    "DefaultConnection": "Server=(LocalDB)\\MSSQLLocalDB;Database=Employee;Trusted_Connection=True"
  }
}



==========================================================================

11. Manage Nuget Packages - install - Microsoft.EntityFrameworkCore

12. Manage Nuget Packages - install - Microsoft.EntityFrameworkCore.SqlServer

13. Create folder - Data

14. In Data folder create class - ApplicationDbContext

======================================================================

using EmployeeRazor.Model;
using Microsoft.EntityFrameworkCore;

namespace EmployeeRazor.Data
{
    public class ApplicationDbContext : DbContext
    {
        public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options) : base(options)
        {

        }
        public DbSet<Employee> Employee { get; set; }
    }
}


======================================================================

15. Vo Program.cs dodaj posle - builder.Services.AddRazorPages().AddRazorRuntimeCompilation(); - dodaj go sledniov kod

builder.Services.AddDbContext<ApplicationDbContext>(options=>options.UseSqlServer(
        builder.Configuration.GetConnectionString("DefaultConnection")
    ));

16. Manage Nuget Packages - install - Microsoft.EntityFrameworkCore.Tools

17. Vo Tools - Nuget Package Manager - Package Manager Console - add-migration AddEmployeeToDb

18. Vo Tools - Nuget Package Manager - Package Manager Console - update-database

19. Vo SQL Server Management Studio treba da ja ima tabelata

20. Vo Pages folder napraj nov folder so ime Employees

21. Vo folder Employees dodaj razor page - empty so ime - Index.cshtml

22. Kreirani se dva fajla so iminja Index.cshtml i Index.cshtml.cs

23. Vo Index.cshtml.cs celiot kod treba da izgleda vaka

==================================================================

using EmployeeRazor.Data;
using EmployeeRazor.Model;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;

namespace EmployeeRazor.Pages.Employees
{
    public class IndexModel : PageModel
    {
        private readonly ApplicationDbContext _db;
        public IEnumerable<Employee> Employees { get; set; }
        public IndexModel(ApplicationDbContext db)
        {
            _db = db;
        }
        public void OnGet()
        {
            Employees = _db.Employee;
        }
    }
}


==================================================================

24. Vo Shared folderot vo fajl _Layout.cshtml moze da se vidi deka preku ovoj kod

				<li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Privacy">Privacy</a>
                        </li>
	moze da se pravi navigacija do Index i Privacy stranite.
	Namesto da se pravi navigacija do Privacy stranata, sakame da napravime navigacija do Categories/Index.
	Ova e izmenata koja treba da ja napravime

===============================================================

				<li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Employees/Index">Employees</a>
                        </li>

===============================================================

25. Vo Employees/Index.cshtml celiot kod treba da izgleda vaka

==============================================================

@page
@model EmployeeRazor.Pages.Employees.IndexModel


<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary">Employee List</h2>
        </div>
        <div class="col-6 text-end">
            <a asp-page="create" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i>&nbsp; Add New Employee
            </a>
        </div>
    </div>

    <br /><br />

    <table class="table table-bordered table-striped" style="width:100%">
        <thead>
            <tr>
                <th>
                    First Name
                </th>
                <th>
                    Last Name
                </th>
                <th>
                    Salary
                </th>
                <th>
                    Email
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach(var obj in Model.Employees)
            {
                <tr>
                    <td width="25%">@obj.FirstName</td>
                    <td width="25%">@obj.LastName</td>
                    <td width="25%">@obj.Salary</td>
                    <td width="25%">@obj.Email</td>
                    <td>
                        <div class="w-100 btn-group" role="group">
                            <a asp-page="Edit" asp-route-id="@obj.EmployeeId" class="btn btn-primary mx2">
                                <i class="bi bi-pencil-fill"></i>
                            </a>
                            <a asp-page="Delete" asp-route-id="@obj.EmployeeId" class="btn btn-danger mx2">
                                <i class="bi bi-trash"></i>
                            </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


==============================================================

27. Vo folder Employees dodaj nov empty razor page so ime Create.cshtml

28. Vo Create.cshtml treba da izgleda vaka

=================================================================

@page
@model EmployeeRazor.Pages.Employees.CreateModel

<form method="post">
    <div class="border p-3 mt-4">
        <div class="row pb-2">
            <h2 class="text-primary pl-3">Add Employee</h2>
            <hr />
        </div>
        <div asp-validation-summary="All"></div>
        <div class="mb-3">
            <label asp-for="@Model.Employee.FirstName"></label>
            <input asp-for="@Model.Employee.FirstName" class = "form-control"/>
            <span asp-validation-for="@Model.Employee.FirstName" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="@Model.Employee.LastName"></label>
            <input asp-for="@Model.Employee.LastName" class = "form-control"/>
            <span asp-validation-for="@Model.Employee.LastName" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="@Model.Employee.Salary"></label>
            <input asp-for="@Model.Employee.Salary" class = "form-control"/>
            <span asp-validation-for="@Model.Employee.Salary" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="@Model.Employee.Email"></label>
            <input asp-for="@Model.Employee.Email" class = "form-control"/>
            <span asp-validation-for="@Model.Employee.Email" class="text-danger"></span>
        </div>
        <button type="submit" class="btn btn-primary" style="width:150px;">Add</button>
        <a asp-page="Index" class="btn btn-secondary"  style="width:150px;"> Back to List</a>
    </div>
</form>

@section Scripts{
	@{
		<partial name="_ValidationScriptsPartial"/>
	}
}


=================================================================

29. Vo Create.cshtml.cs kodot  treba da izgleda vaka

================================================================

using EmployeeRazor.Data;
using EmployeeRazor.Model;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;

namespace EmployeeRazor.Pages.Employees
{
    [BindProperties]
    public class CreateModel : PageModel
    {
        private readonly ApplicationDbContext _db;

        public Employee Employee { get; set; }

        public CreateModel(ApplicationDbContext db)
        {
            _db = db;
        }
        public void OnGet()
        {
        }

        public async Task<IActionResult> OnPost()
        {
            if (ModelState.IsValid)
            {
                await _db.Employee.AddAsync(Employee);
                await _db.SaveChangesAsync();
                TempData["success"] = "Category created successfully";
                return RedirectToPage("Index");
            }
            return Page();
        }
    }
}


================================================================

31. Promena na temata na aplikacijata. Idi na bootswatch.com. Napraj download bootstrap.css na koja tema sakas. Kopiraj se sto e vo simnatiot css fajl. Vo folderot css dodaj nov style sheet. I pastiraj go simnatiot kod.

32. Vo folder shared. Vo _Layout.cshtml ovoj kod -     <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" /> smeni go so - <link rel="stylesheet" href="~/css/Vapor.css" />

33. Vo stranica getbootstrap.com baraj i kopiraj cdn link za css koj e - <!-- JavaScript Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>

34. Vo folder shared. Vo _Layout.cshtml ovoj kod - <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script> - zameni go so - <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>

35. Na istata web stranica moze da se simnat i ikoni

36. Baraj i kopiraj cdn link koj izgleda vaka - <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.0/font/bootstrap-icons.css">  

37. Dodadi go linkot vo style sheets vo _Layout.cshtml

38. Na stranicata kade sto ja simna temata. Odi vo preview i ke vidis kakva moze da ja napravis navigacionata lenta a i ostanati komponenti

39. Vo _Layout.cshtml ovoj kod - <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3"> - zameni go so - <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark bg-dark border-bottom box-shadow mb-3">

43. Vo _Layout.cshtml ovoj kod - <footer class="footer text-muted"> - smeni go so - <footer class="footer text-muted bg-dark">

46. Vo https://icons.getbootstrap.com/ vo search baraj pencil

47. Najdi ja sakanata ikona i kopiraj go kodot za ikona koj izgleda vaka <i class="bi bi-pencil-fill"></i>

53. Copy Create.cshtml and paste in same folder. Rename to Edit.cshtml. Potrebno e na 3 mesta da se smeni imeto i izmena na OnGet so parametar. Eve kako teba da izgledaat kodovite.

=========================================================================

@page
@model EmployeeRazor.Pages.Employees.EditModel

<form method="post">
    <input hidden asp-for="Employee.EmployeeId" />
    <div class="border p-3 mt-4">
        <div class="row pb-2">
            <h2 class="text-primary pl-3">Edit Employee</h2>
            <hr />
        </div>
        <div asp-validation-summary="All"></div>
        <div class="mb-3">
            <label asp-for="@Model.Employee.FirstName"></label>
            <input asp-for="@Model.Employee.FirstName" class = "form-control"/>
            <span asp-validation-for="@Model.Employee.FirstName" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="@Model.Employee.LastName"></label>
            <input asp-for="@Model.Employee.LastName" class = "form-control"/>
            <span asp-validation-for="@Model.Employee.LastName" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="@Model.Employee.Salary"></label>
            <input asp-for="@Model.Employee.Salary" class = "form-control"/>
            <span asp-validation-for="@Model.Employee.Salary" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="@Model.Employee.Email"></label>
            <input asp-for="@Model.Employee.Email" class = "form-control"/>
            <span asp-validation-for="@Model.Employee.Email" class="text-danger"></span>
        </div>
        <button type="submit" class="btn btn-primary" style="width:150px;">Update</button>
        <a asp-page="Index" class="btn btn-secondary"  style="width:150px;"> Back to List</a>
    </div>
</form>

@section Scripts{
	@{
		<partial name="_ValidationScriptsPartial"/>
	}
}

=========================================================================

using EmployeeRazor.Data;
using EmployeeRazor.Model;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;

namespace EmployeeRazor.Pages.Employees
{
    [BindProperties]
    public class EditModel : PageModel
    {
        private readonly ApplicationDbContext _db;

        public Employee Employee { get; set; }

        public EditModel(ApplicationDbContext db)
        {
            _db = db;
        }
        public void OnGet()
        {
        }

        public async Task<IActionResult> OnPost()
        {
            if (ModelState.IsValid)
            {
                _db.Employee.Update(Employee);
                await _db.SaveChangesAsync();
                TempData["success"] = "Category updated successfully";
                return RedirectToPage("Index");
            }
            return Page();
        }
    }
}

=========================================================================

57. Vo folder Employees kopiraj go Edit.cshtml fajlot i pastiraj go na isto mesto. Smeni go imeto vo Delete.cshtml
	Vaka treba da izgledaat celosno i dvata fajla

========================================================================

@page
@model EmployeeRazor.Pages.Employees.DeleteModel

<form method="post">
    <input hidden asp-for="Employee.EmployeeId" />
    <div class="border p-3 mt-4">
        <div class="row pb-2">
            <h2 class="text-primary pl-3">Delete Employee</h2>
            <hr />
        </div>
        <div asp-validation-summary="All"></div>
        <div class="mb-3">
            <label asp-for="@Model.Employee.FirstName"></label>
            <input asp-for="@Model.Employee.FirstName" disabled class = "form-control"/>
        </div>
        <div class="mb-3">
            <label asp-for="@Model.Employee.LastName"></label>
            <input asp-for="@Model.Employee.LastName" disabled class = "form-control"/>
        </div>
        <div class="mb-3">
            <label asp-for="@Model.Employee.Salary"></label>
            <input asp-for="@Model.Employee.Salary" disabled class = "form-control"/>
        </div>
        <div class="mb-3">
            <label asp-for="@Model.Employee.Email"></label>
            <input asp-for="@Model.Employee.Email" disabled class = "form-control"/>
        </div>
        <button type="submit" class="btn btn-danger" style="width:150px;">Delete</button>
        <a asp-page="Index" class="btn btn-secondary"  style="width:150px;"> Back to List</a>
    </div>
</form>

@section Scripts{
	@{
		<partial name="_ValidationScriptsPartial"/>
	}
}


========================================================================

using EmployeeRazor.Data;
using EmployeeRazor.Model;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;

namespace EmployeeRazor.Pages.Employees
{
    [BindProperties]
    public class DeleteModel : PageModel
    {
        private readonly ApplicationDbContext _db;

        public Employee Employee { get; set; }

        public DeleteModel(ApplicationDbContext db)
        {
            _db = db;
        }
        public void OnGet()
        {
        }

        public async Task<IActionResult> OnPost()
        {
            if (ModelState.IsValid)
            {
                _db.Employee.Remove(Employee);
                await _db.SaveChangesAsync();
                TempData["success"] = "Category deleted successfully";
                return RedirectToPage("Index");
            }
            return Page();
        }
    }
}

========================================================================

59. Ova od pogore izbrisigo. Vo _Layout.cshtml dodaj kod - <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" /> - linkovite ke gi najdes na linkov https://github.com/CodeSeven/toastr

63. Vo Shared folderot dodaj nov empty razor view so ime _Notification kodot treba da izgleda vaka

===================================================

@if (TempData["success"] != null)
{
	<script src="~/lib/jquery/dist/jquery.min.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
	<script type="text/javascript">
		toastr.success('@TempData["success"]');
	</script>
}
@if (TempData["error"] != null)
{
	<script src="~/lib/jquery/dist/jquery.min.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
	<script type="text/javascript">
		toastr.error('@TempData["error"]');
	</script>
}

===================================================

66. Vo _Layout.cshtml dodaj - <partial name="_Notification" /> - tocno nad @RenderBody()


na github se najtocnite kodovi ovde ima greski i nedostatoci

